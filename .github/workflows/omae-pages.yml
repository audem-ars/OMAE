name: OMAe Dispatch / run-omae

on:
  workflow_dispatch:
    inputs:
      pat:
        description: 'Personal Access Token with Contents RW + Actions RW + Workflows RW (or classic: repo + workflow)'
        required: true
        type: string
      promote:
        description: 'Copy candidate -> current after build?'
        required: true
        default: true
        type: boolean

permissions:
  contents: write
  actions: write
  workflows: write

concurrency:
  group: omae-pages
  cancel-in-progress: true

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Validate inputs
        run: |
          if [ -z "${{ inputs.pat }}" ]; then
            echo "PAT is required (with Contents RW, Actions RW, Workflows RW)."
            exit 1
          fi

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # -------- Build the landing template (what becomes Candidate) --------
      - name: Install deps (landing template)
        working-directory: templates/landing_saas
        run: |
          npm ci || npm i

      - name: Build (landing template)
        working-directory: templates/landing_saas
        run: npm run build

      # -------- Publish to apps/publish/candidate --------
      - name: Publish candidate
        shell: bash
        run: |
          set -euo pipefail
          rm -rf apps/publish/candidate || true
          mkdir -p apps/publish/candidate
          cp -R templates/landing_saas/dist/. apps/publish/candidate/

          # inject <base> and add SPA fallback
          f="apps/publish/candidate/index.html"
          p="/OMAE/${f%index.html}"
          awk -v base="$p" 'BEGIN{IGNORECASE=1} /<head[^>]*>/{print;print "  <base href=\"" base "\">";next} {print}' "$f" > "$f.tmp" && mv "$f.tmp" "$f"
          cp "$f" "apps/publish/candidate/404.html"

      # -------- Optional: promote candidate -> current --------
      - name: Promote to current
        if: ${{ inputs.promote }}
        shell: bash
        run: |
          set -euo pipefail
          rm -rf apps/publish/current || true
          mkdir -p apps/publish/current
          cp -R apps/publish/candidate/. apps/publish/current/

          # inject <base> and add SPA fallback
          f="apps/publish/current/index.html"
          p="/OMAE/${f%index.html}"
          awk -v base="$p" 'BEGIN{IGNORECASE=1} /<head[^>]*>/{print;print "  <base href=\"" base "\">";next} {print}' "$f" > "$f.tmp" && mv "$f.tmp" "$f"
          cp "$f" "apps/publish/current/404.html"

      # -------- Commit & push using provided PAT --------
      - name: Commit & push
        env:
          GH_REPO: ${{ github.repository }}
          PAT: ${{ inputs.pat }}
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "omai-bot"
          git config user.email "omai-bot@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "publish: rebuild candidate${{ inputs.promote && ' + promote current' || '' }}"
          git remote set-url origin "https://x-access-token:${PAT}@github.com/${GH_REPO}.git"
          git push origin HEAD:main
