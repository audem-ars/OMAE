name: OMAe Dispatch

on:
  workflow_dispatch:
  push:
    paths:
      - 'playbooks/**'
      - 'executor/**'
      - 'site/**'
      - '.github/workflows/omae.yml'

permissions:
  contents: write

concurrency:
  group: omae-dispatch-main
  cancel-in-progress: true

jobs:
  run-omae:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install -U pip pyyaml

      - name: Run playbook
        run: |
          set -euo pipefail
          PYTHONPATH=executor python -m omae.cli -p playbooks/site_template.yaml

      - name: Build site (Vite)
        working-directory: site
        run: |
          set -euo pipefail
          npm ci || npm i
          npm run build

      - name: Publish candidate/current with base+404
        run: |
          set -euo pipefail
          # candidate
          rm -rf apps/publish/candidate/*
          cp -R site/dist/. apps/publish/candidate/
          f=apps/publish/candidate/index.html
          awk 'BEGIN{IGNORECASE=1} /<head[^>]*>/{print;print "  <base href=\"/OMAE/apps/publish/candidate/\">";next} {print}' "$f" > "$f.tmp" && mv "$f.tmp" "$f"
          cp "$f" apps/publish/candidate/404.html
          # current
          rm -rf apps/publish/current/*
          cp -R apps/publish/candidate/. apps/publish/current/
          fc=apps/publish/current/index.html
          awk 'BEGIN{IGNORECASE=1} /<head[^>]*>/{print;print "  <base href=\"/OMAE/apps/publish/current/\">";next} {print}' "$fc" > "$fc.tmp" && mv "$fc.tmp" "$fc"
          cp "$fc" apps/publish/current/404.html

      - name: Commit & push (rebase-safe)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          git config user.name  "omae-bot"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "ci(publish): update candidate/current (bot)"

          # Rebase on latest remote and retry push to avoid non-fast-forward failures
          git fetch origin
          git pull --rebase origin main || { git rebase --abort; echo "Rebase failed"; exit 1; }

          for i in 1 2 3; do
            if git push origin HEAD:main; then
              echo "Pushed on attempt $i"
              break
            fi
            echo "Push race detected, retrying ($i)..."
            git fetch origin
            git pull --rebase origin main || git rebase --abort
            sleep $((RANDOM%4+2))
          done
